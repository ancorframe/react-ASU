{"version":3,"file":"static/js/8676.59f74b7b.chunk.js","mappings":"oQAIO,SAASA,EAAoBC,GAClC,OAAOC,EAAAA,EAAAA,GAAS,CACdC,SAAU,CAAC,aAAcF,GACzBG,QAAQ,WAAD,wBAAE,8FAASC,EAAT,EAASA,OAAT,SACgBC,EAAAA,EAAAA,IAAA,0BAA6BL,GAAM,CACxDI,OAAAA,IAFK,cACDE,EADC,yBAIAA,EAASC,MAJT,2CAAF,mDAAC,GAMRC,sBAAsB,EACtBC,gBAAgB,EAChBC,MAAO,GAGV,CAEM,SAASC,IACd,OAAOC,EAAAA,EAAAA,GAAiB,CACtBV,SAAU,CAAC,sBACXC,QAAQ,WAAD,wBAAE,kGAASC,EAAT,EAASA,OAAT,IAAiBS,UAAAA,OAAjB,MAA6B,EAA7B,WACgBR,EAAAA,EAAAA,IAAA,kBAA6B,CAClDD,OAAAA,EACAU,OAAQ,CACNC,KAAMF,KAJH,cACDP,EADC,yBAOAA,EAASC,MAPT,2CAAF,mDAAC,GASRS,iBAAkB,SAAAC,GAAQ,OACxBA,EAASC,UAAYD,EAASE,cAAWC,EAAYH,EAASE,QADtC,EAE1BX,sBAAsB,EACtBC,gBAAgB,EAChBC,OAAO,GAGV,C,mLCxBYW,EAAa,WACxB,OACE,iCACE,SAAC,IAAD,CAAcC,GAAI,CAAC,GAAI,IAAKC,GAAI,CAAC,GAAI,IAArC,UACE,SAAC,IAAD,WACE,UAAC,KAAD,YACE,SAAC,IAAD,CAAUC,OAAQ,OAAQC,MAAO,UACjC,SAAC,KAAD,WACE,SAAC,IAAD,CAAKC,GAAI,CAAC,EAAG,GAAIC,GAAI,CAAC,GAAI,GAA1B,UACE,SAAC,IAAD,CAAOC,QAAQ,KAAf,UACE,SAAC,IAAD,kBAOZ,SAAC,IAAD,WACE,SAAC,KAAD,WACE,SAAC,IAAD,SAGJ,SAAC,IAAD,MAGL,C,0FCtCYC,EAAUC,EAAAA,GAAAA,QAAH,gKASPC,EAAQD,EAAAA,GAAAA,GAAH,0TACD,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,MAAlB,IACD,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,YAAYC,IAAxB,IACH,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,UAAUC,OAAOC,EAA7B,IAGL,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,OAAOC,KAAnB,IAKK,SAAAV,GAAC,OAAIA,EAAEC,MAAMK,UAAUK,QAAQH,EAA9B,IAOLI,EAAOd,EAAAA,GAAAA,GAAH,mTAgBJe,EAAOf,EAAAA,GAAAA,GAAH,uR,4CCzCJgB,EAAsB,SAAC,GAG7B,IAFLvC,EAEI,EAFJA,KAEI,IADJwC,MAAAA,OACI,MADI,uHACJ,EACJ,OAAKxC,GAqBH,UAACsB,EAAD,YACE,SAACE,EAAD,UAAQgB,KACR,SAACH,EAAD,UACGrC,EAAKyC,KAAI,SAAAzC,GAAI,OACZ,SAACsC,EAAD,WACE,SAACI,EAAA,EAAD,CAAMC,KAAM3C,KADHA,EAAKP,GADJ,UAtBhB,UAAC6B,EAAD,YACE,SAACE,EAAD,WACE,SAAC,IAAD,CAAUP,OAAQ,OAAQC,MAAO,YAEnC,SAACmB,EAAD,UACGO,MAAM,GACJC,OACAJ,KAAI,SAACK,EAAMC,GACV,OACE,SAACT,EAAD,WACE,SAACI,EAAA,EAAD,KADSK,EAId,QAiBZ,C,yGC1BYzB,GAAUC,EAAAA,EAAAA,IAAO,UAAPA,EACrByB,EAAAA,EAAAA,IADqB,2JAQrBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,I,WC7BWC,EAAiB,SAAAC,GAC5B,OAAO,SAACtC,GAAD,UAAasC,GACrB,C,yGCUYtC,GAAUC,EAAAA,EAAAA,IAAO,UAAPA,EACrByB,EAAAA,EAAAA,IADqB,qIAOrBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,I,WC5BWG,EAAe,SAAAD,GAC1B,OAAO,SAACtC,GAAD,UAAasC,GACrB,C,yGCUYE,GAAYvC,EAAAA,EAAAA,IAAO,MAAPA,EACvByB,EAAAA,EAAAA,IADuB,kJAQvBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,I,WC7BWrB,EAAO,SAAAuB,GAClB,OAAO,SAACE,GAAD,UAAeF,GACvB,C,oHCDYG,GAAQxC,EAAAA,EAAAA,IAAOyC,EAAAA,GAAPzC,CAAH,2zBAwBW,SAAAE,GAAC,OAAIA,EAAEC,MAAMQ,OAAOC,KAAnB,IAQjB8B,EAAe1C,EAAAA,GAAAA,IAAH,8NAWZ2C,EAAU3C,EAAAA,GAAAA,IAAH,sOAaP4C,EAAgB5C,EAAAA,GAAAA,IAAH,gOAYb6C,EAAW7C,EAAAA,GAAAA,EAAH,qWAGJ,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM0C,OAAlB,IACD,SAAA5C,GAAC,OAAIA,EAAEC,MAAMG,YAAYC,IAAxB,IACH,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,UAAUsC,QAAQC,OAA9B,IAGL,SAAA7C,GAAC,OAAIA,EAAEC,MAAMQ,OAAOC,KAAnB,IAUCoC,EAAOhD,EAAAA,GAAAA,EAAH,kIACA,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM6C,IAAlB,IACD,SAAA/C,GAAC,OAAIA,EAAEC,MAAMG,YAAYC,IAAxB,IACH,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,UAAUyC,KAAKC,GAA3B,IAEL,SAAAhD,GAAC,OAAIA,EAAEC,MAAMQ,OAAOC,KAAnB,I,sBCpFCO,EAAO,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,KAAM+B,EAAU,EAAVA,KAC3B,IAAK/B,EACH,OACE,+BACE,UAACoB,EAAD,YACE,SAACE,EAAD,WACE,SAAC,IAAD,CAAUhD,OAAQ,OAAQC,MAAO,YAEnC,SAACiD,EAAD,WACE,SAAC,IAAD,CAAUlD,OAAQ,OAAQC,MAAO,gBAM3C,IAAQlB,EAAa2C,EAAb3C,KAAMP,EAAOkD,EAAPlD,GACRkF,EAAU,IAAIC,KAAK5E,EAAK6E,MACxBC,EAAOH,EAAQI,cACfC,EAAQC,OAAON,EAAQO,WAAa,GAAGC,SAAS,EAAG,KACnDC,EAAMH,OAAON,EAAQU,WAAWF,SAAS,EAAG,KAC5CG,EAAQL,OAAON,EAAQY,YAAYJ,SAAS,EAAG,KAC/CK,EAAUP,OAAON,EAAQc,cAAcN,SAAS,EAAG,KACnDO,EAAa,UAAMN,EAAN,YAAaJ,EAAb,YAAsBF,EAAtB,cAAgCQ,EAAhC,YAAyCE,GAE5D,OACE,+BACE,UAACzB,EAAD,CAAO4B,GAAIjB,EAAI,sBAAkBjF,GAAlB,UAA4BA,GAA3C,WACE,UAACwE,EAAD,YACE,SAACC,EAAD,CAAS0B,IAAK5F,EAAK6F,MAAOC,IAAI,QAAQC,QAAQ,UAC9C,SAACC,EAAA,EAAD,CAAKxC,SAAS,WAAWyC,IAAK,EAAGC,KAAM,EAAGzE,EAAG,EAAG0E,GAAG,QAAnD,UACE,SAAC5B,EAAD,UAAOmB,UAGX,SAACvB,EAAD,WACE,SAACC,EAAD,UAAWpE,EAAKwC,cAKzB,C,iSCxBK4D,EAAU,CACdC,QAAS,SAAAC,GACP,OAAQA,EAAGC,MACT,IAAK,KACH,OACE,SAAC,IAAD,CAAOlF,QAAQ,KAAKL,GAAI,CAAC,EAAG,GAAIwF,GAAI,EAAGC,aAAc,SAArD,UACGC,EAAAA,EAAAA,IAAWJ,EAAGK,SAAUP,KAG/B,IAAK,KACH,OACE,SAAC,IAAD,CAAO/E,QAAQ,KAAKL,GAAI,CAAC,EAAG,GAAIwF,GAAI,EAAGC,aAAc,SAArD,UACGC,EAAAA,EAAAA,IAAWJ,EAAGK,SAAUP,KAG/B,IAAK,KACH,OACE,SAAC,IAAD,CAAO/E,QAAQ,KAAKL,GAAI,CAAC,EAAG,GAAIwF,GAAI,EAAGC,aAAc,SAArD,UACGC,EAAAA,EAAAA,IAAWJ,EAAGK,SAAUP,KAG/B,IAAK,KACH,OACE,SAAC,IAAD,CAAO/E,QAAQ,KAAKL,GAAI,CAAC,EAAG,GAAIwF,GAAI,EAAGC,aAAc,SAArD,UACGC,EAAAA,EAAAA,IAAWJ,EAAGK,SAAUP,KAG/B,IAAK,KACH,OACE,SAAC,IAAD,CAAO/E,QAAQ,KAAKL,GAAI,CAAC,EAAG,GAAIwF,GAAI,EAAGC,aAAc,SAArD,UACGC,EAAAA,EAAAA,IAAWJ,EAAGK,SAAUP,KAG/B,IAAK,IACH,OAAO,SAAC,IAAD,WAAUM,EAAAA,EAAAA,IAAWJ,EAAGK,SAAUP,KAC3C,IAAK,MACH,OAAO,SAAC,IAAD,CAAYR,IAAKU,EAAGM,QAAQhB,IAAKE,IAAKQ,EAAGM,QAAQd,MAC1D,IAAK,KACH,OAAO,UAAC,KAAD,gBAAQY,EAAAA,EAAAA,IAAWJ,EAAGK,SAAUP,MACzC,IAAK,KACH,OACE,2BACE,SAAC,IAAD,WAAUM,EAAAA,EAAAA,IAAWJ,EAAGK,SAAUP,KAAoB,OAM/D,GAGUS,EAAoB,WAC/B,IAAQpH,GAAOqH,EAAAA,EAAAA,MAAPrH,GACR,GAAqCD,EAAAA,EAAAA,GAAoBC,GAAjDO,EAAR,EAAQA,KAAM+G,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,UAgBvB,OACE,iCACE,SAAC,IAAD,WACE,2BACE,UAAC,IAAD,CAAiBC,KAAK,OAAtB,YACKjH,IACD,+BACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAce,GAAI,CAAC,GAAI,IAAKC,GAAI,CAAC,GAAI,IAArC,UACE,SAAC,IAAD,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAK4E,IAAK5F,EAAKkH,WAAWA,WAAWlH,KAAK6F,SAC1C,SAAC,KAAD,WACE,UAAC,IAAD,CAAK1E,GAAI,CAAC,EAAG,GAAIC,GAAI,CAAC,GAAI,GAA1B,WACE,SAAC,IAAD,CAAOC,QAAQ,KAAKmF,GAAI,CAAC,EAAG,GAA5B,SACGxG,EAAKkH,WAAWA,WAAWlH,KAAKwC,SAEnC,SAAC,IAAD,CAAOnB,QAAQ,KAAf,SA/BJ,WACpB,GAAIrB,EAAM,CACR,IAAM2E,EAAU,IAAIC,KAAK5E,EAAKkH,WAAWA,WAAWlH,KAAK6E,MACnDC,EAAOH,EAAQI,cACfC,EAAQC,OAAON,EAAQO,WAAa,GAAGC,SAAS,EAAG,KACnDC,EAAMH,OAAON,EAAQU,WAAWF,SAAS,EAAG,KAC5CG,EAAQL,OAAON,EAAQY,YAAYJ,SAAS,EAAG,KAC/CK,EAAUP,OAAON,EAAQc,cAAcN,SAAS,EAAG,KAGzD,MAFmB,UAAMC,EAAN,YAAaJ,EAAb,YAAsBF,EAAtB,cAAgCQ,EAAhC,YAAyCE,EAG7D,CACF,CAmB8CE,kBAM/B,SAAC,IAAD,WACE,SAAC,KAAD,WACE,SAAC,IAAD,CAAKc,GAAI,CAAC,GAAI,IAAd,UACE,SAAC,IAAD,CACEW,KAAMnH,EAAKkH,WAAWA,WAAWlH,KAAKoH,QACtChB,QAASA,UAKhBpG,EAAKkH,WAAWG,eAAe,KAC9B,SAAC,IAAD,CACE1E,KAAM3C,EAAKkH,WAAWG,mBA5BX,YAkCpBN,IACC,SAAC,IAAD,WACE,SAAC,IAAD,KADe,SAIlBC,IACC,SAAC,IAAD,WACE,SAAC,IAAD,KADe,gBA7CR,iBAqDjB,SAAC,IAAD,MAGL,C,yMCrJKM,EAAAA,SAAAA,I,6BAKJ,WAAYC,EAAQC,GAAS,kCACrBD,EAAQC,EACf,C,0CAED,YACE,2DACA,KAAKC,cAAgB,KAAKA,cAAcC,KAAK,MAC7C,KAAKC,kBAAoB,KAAKA,kBAAkBD,KAAK,KACtD,G,wBAED,SAAWF,EAASI,IAClB,4EAAsBJ,GAAtB,IACEK,UAAUC,EAAAA,EAAAA,QACTF,EACJ,G,iCAED,SAAoBJ,GAElB,OADAA,EAAQK,UAAWC,EAAAA,EAAAA,OACnB,kEAAiCN,EAClC,G,2BAED,WAGQ,6DAAJ,GAFFO,EAEM,EAFNA,UACGP,GACG,YACN,OAAO,KAAKlH,OAAL,kBAAgBkH,GAAhB,IACLQ,KAAM,CACJC,UAAW,CACTC,UAAW,UACXH,UAAAA,MAIP,G,+BAED,WAGQ,6DAAJ,GAFFA,EAEM,EAFNA,UACGP,GACG,YACN,OAAO,KAAKlH,OAAL,kBAAgBkH,GAAhB,IACLQ,KAAM,CACJC,UAAW,CACTC,UAAW,WACXH,UAAAA,MAIP,G,0BAED,SAAaI,EAAOX,GAClB,IAAIY,EAAkBC,EAAuBC,EAAmBC,EAAuBC,EAAaC,EAGlGC,EACEP,EADFO,MAEIC,GAAM,2DAAsBR,EAAOX,GAEvCoB,EAEED,EAFFC,WACAC,EACEF,EADFE,aAEI7I,EAAqB4I,GAAoL,aAA7H,OAAvCR,EAAmBM,EAAMI,YAAsF,OAAvDT,EAAwBD,EAAiBH,gBAAnD,EAAiFI,EAAsBH,WAC1La,EAAyBH,GAAsL,cAA9H,OAAxCN,EAAoBI,EAAMI,YAAuF,OAAxDP,EAAwBD,EAAkBL,gBAApD,EAAkFM,EAAsBL,WACtM,yBAAYS,GAAZ,IACElB,cAAe,KAAKA,cACpBE,kBAAmB,KAAKA,kBACxBqB,aAAaA,EAAAA,EAAAA,IAAYxB,EAAuC,OAA7BgB,EAAcE,EAAMO,WAAgB,EAAST,EAAYU,OAC5F9C,iBAAiBA,EAAAA,EAAAA,IAAgBoB,EAAwC,OAA9BiB,EAAeC,EAAMO,WAAgB,EAASR,EAAaS,OACtGlJ,mBAAAA,EACA+I,uBAAAA,EACAF,aAAcA,IAAiB7I,IAAuB+I,GAEzD,K,EA5EGzB,CAA8B6B,EAAAA,G,sBCCpC,SAAS,EAAiB,EAAM,EAAM,GACpC,IAAM,GAAU,QAAe,EAAM,EAAM,GAC3C,OAAO,OAAa,EAAS,EAC9B,C","sources":["client/hooks/conference.js","components/LoaderNews.jsx","components/NewsRecommendations/NewsRecommendations.styled.jsx","components/NewsRecommendations/NewsRecommendations.jsx","components/Templates/SectionContent/SectionContent.styled.jsx","components/Templates/SectionContent/SectionContent.jsx","components/Templates/SectionTitle/SectionTitle.styled.jsx","components/Templates/SectionTitle/SectionTitle.jsx","components/Templates/Wrap/Wrap.styled.jsx","components/Templates/Wrap/Wrap.jsx","components/common/Card/Card.styled.jsx","components/common/Card/Card.jsx","pages/client/ConferencesDetail.jsx","../node_modules/@tanstack/query-core/src/infiniteQueryObserver.ts","../node_modules/@tanstack/react-query/src/useInfiniteQuery.ts"],"sourcesContent":["import { useInfiniteQuery, useQuery } from '@tanstack/react-query';\nimport axios from 'axios';\n\n\nexport function useConferenceDetail(id) {\n  return useQuery({\n    queryKey: ['conference', id],\n    queryFn: async ({ signal }) => {\n      const response = await axios.get(`/api/conference/${id}`, {\n        signal,\n      });\n      return response.data;\n    },\n    refetchOnWindowFocus: false,\n    refetchOnMount: false,\n    retry: 2,\n    // enabled: false, // disable this query from automatically running\n  });\n}\n\nexport function useInfiniteConference() {\n  return useInfiniteQuery({\n    queryKey: ['conferenceInfinite'],\n    queryFn: async ({ signal, pageParam = 1 }) => {\n      const response = await axios.get(`/api/conference`, {\n        signal,\n        params: {\n          page: pageParam,\n        },\n      });\n      return response.data;\n    },\n    getNextPageParam: lastPage =>\n      lastPage.totalPage < lastPage.nextPage ? undefined : lastPage.nextPage,\n    refetchOnWindowFocus: false,\n    refetchOnMount: false,\n    retry: false,\n    // enabled: false, // disable this query from automatically running\n  });\n}\n","import Skeleton from 'react-loading-skeleton';\nimport { Box } from './Box';\nimport {\n  Container,\n  ImgContainer,\n  TitleContainer,\n} from './common/PagesDetail/PagesDetail.styled';\nimport { Loader } from './Loader';\nimport { NewsRecommendations } from './NewsRecommendations/NewsRecommendations';\nimport { SectionContent } from './Templates/SectionContent/SectionContent';\nimport { SectionTitle } from './Templates/SectionTitle/SectionTitle';\nimport { Title } from './Templates/Title/Title';\nimport { Wrap } from './Templates/Wrap/Wrap';\nimport 'react-loading-skeleton/dist/skeleton.css';\n\nexport const LoaderNews = () => {\n  return (\n    <>\n      <SectionTitle pt={[17, 18]} pb={[21, 19]}>\n        <Wrap>\n          <ImgContainer>\n            <Skeleton height={'100%'} width={'100%'} />\n            <TitleContainer>\n              <Box px={[6, 9]} py={[20, 8]}>\n                <Title variant=\"h2\">\n                  <Skeleton />\n                </Title>\n              </Box>\n            </TitleContainer>\n          </ImgContainer>\n        </Wrap>\n      </SectionTitle>\n      <SectionContent>\n        <Container>\n          <Loader />\n        </Container>\n      </SectionContent>\n      <NewsRecommendations />\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Section = styled.section`\n  max-width: 1248px;\n  margin: 0 auto;\n  padding: 0 12px 100px;\n  @media screen and (min-width: 980px) {\npadding: 0  0 128px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-family: ${p => p.theme.fonts.titles};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.mobile.xl};\n  line-height: 1.16;\n  letter-spacing: -0.05em;\n  color: ${p => p.theme.colors.black};\n  opacity: 0.2;\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 980px) {\n    font-size: ${p => p.theme.fontSizes.desktop.xl};\n    line-height: 1.2; \n     margin-bottom: 32px;\n  }\n\n`;\n\nexport const Wrap = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  justify-content: center;\n  /* margin-bottom: 16px; */\n  @media screen and (min-width: 980px) {\n    gap: 24px;\n/* \n    margin-bottom: 24px; */\n  }\n  @media screen and (min-width: 600px) {\n    justify-content: unset;\n  }\n`;\n\nexport const Item = styled.li`\n  min-width: 250px;\n\n  /* max-height: 320px; */\n  width: 100%;\n  @media screen and (min-width: 600px) {\n    width: calc(100% / 2 - 8px);\n    max-width: 400px;\n  }\n\n  @media screen and (min-width: 850px) {\n    width: calc(100% / 3 - 16px);\n  }\n`;","import { Item, Section, Title, Wrap } from './NewsRecommendations.styled';\nimport { Card } from 'components/common/Card/Card';\nimport Skeleton from 'react-loading-skeleton';\nimport 'react-loading-skeleton/dist/skeleton.css';\nexport const NewsRecommendations = ({\n  data,\n  title = 'Рекомендовані новини:',\n}) => {\n  if (!data) {\n    return (\n      <Section>\n        <Title>\n          <Skeleton height={'100%'} width={'100%'} />\n        </Title>\n        <Wrap>\n          {Array(3)\n            .fill()\n            .map((item, index) => {\n              return (\n                <Item key={index}>\n                  <Card />\n                </Item>\n              );\n            })}\n        </Wrap>\n      </Section>\n    );\n  }\n  return (\n    <Section>\n      <Title>{title}</Title>\n      <Wrap>\n        {data.map(data => (\n          <Item key={data.id}>\n            <Card news={data} />\n          </Item>\n        ))}\n      </Wrap>\n    </Section>\n  );\n};\n","import styled, { css } from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow,\n  typography,\n} from 'styled-system';\n\nexport const Section = styled('section')(\n  css`\n  min-height:45vh;\n    padding-bottom: 100px;\n    @media screen and (min-width: 980px) {\n      padding-bottom: 128px;\n    }\n  `,\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow,\n  typography\n);\n","import { Section } from './SectionContent.styled';\n\nexport const SectionContent = props => {\n  return <Section {...props} />;\n};\n","import styled, { css } from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow,\n  typography,\n} from 'styled-system';\n\nexport const Section = styled('section')(\n  css`\n    padding: 40px 0 20px;\n    @media screen and (min-width: 980px) {\n      padding: 80px 0 40px;\n    }\n  `,\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow,\n  typography\n);\n","import { Section } from './SectionTitle.styled';\n\nexport const SectionTitle = props => {\n  return <Section {...props} />;\n};\n","import styled, { css } from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow,\n  typography,\n} from 'styled-system';\n\nexport const Container = styled('div')(\n  css`\n    margin: 0 auto;\n    padding: 0 12px;\n    @media screen and (min-width: 980px) {\n      max-width: 1272px;\n    }\n  `,\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow,\n  typography\n);\n","import { Container } from './Wrap.styled';\n\nexport const Wrap = props => {\n  return <Container {...props} />;\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Cards = styled(NavLink)`\n  /* text-decoration-line:none; */\n  text-decoration: none;\n  display: block;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  /* min-width: 358px; */\n  /* max-width: 400px; */\n  /* max-height: 340px; */\n  /* width: 100%; */\n  padding: 4px 4px 16px;\n  height: 100%;\n  border-radius: 4px;\n  align-items: center;\n  background: #ffffff;\n  box-shadow: 0px 4px 128px rgba(188, 196, 211, 0.5);\n  /* transition-property: text-decoration;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); */\n  :hover,\n  :focus {\n    /* box-shadow: 0px 4px 128px rgb(112 123 144 / 56%); */\n    text-decoration-line: underline;\n    text-decoration-color: ${p => p.theme.colors.black};\n  }\n  @media screen and (min-width: 980px) {\n    padding: 4px 4px 24px;\n    gap: 20px;\n  }\n`;\n\nexport const ImgContainer = styled.div`\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n  border: 2px solid #161b1f;\n  border-radius: 1px;\n  height: 240px;\n  @media screen and (max-width: 599px) {\n    height: 156px;\n  }\n`;\nexport const CardImg = styled.img`\n  /* margin-top: 4px ; */\n  /* max-width: 100%; */\n  width: 100%;\n  height: 240px;\n  object-fit: cover;\n  object-position: center;\n\n  @media screen and (max-width: 599px) {\n    height: 156px;\n  }\n`;\n\nexport const TextContainer = styled.div`\n  width: 100%;\n  /* height: 48px; */\n  /* margin-bottom: 16px; */\n  flex-grow: 1;\n  /* @media screen and (min-width: 980px) { */\n  /* margin-bottom: 24px; */\n  /* height: 52px; */\n\n  /* } */\n`;\n\nexport const CardText = styled.p`\n  padding: 0 12px 0 12px;\n  /* margin-bottom: 16px; */\n  font-family: ${p => p.theme.fonts.actions};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.actions.buttonL};\n  line-height: 1.33;\n  letter-spacing: -0.06em;\n  color: ${p => p.theme.colors.black};\n  @media screen and (min-width: 980px) {\n    line-height: 1.3;\n    padding: 0 20px 0 20px;\n    /* margin-bottom: 24px; */\n  }\n\n  height: 100%;\n`;\n\nexport const Time = styled.p`\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.main.tag};\n  text-transform: uppercase;\n  color: ${p => p.theme.colors.black};\n`;\n","import { Box } from 'components/Box';\nimport {\n  Cards,\n  CardImg,\n  CardText,\n  ImgContainer,\n  TextContainer,\n  Time,\n} from './Card.styled';\nimport Skeleton from 'react-loading-skeleton';\nexport const Card = ({ news, home}) => {\n  if (!news) {\n    return (\n      <>\n        <Cards>\n          <ImgContainer>\n            <Skeleton height={'100%'} width={'100%'} />\n          </ImgContainer>\n          <TextContainer>\n            <Skeleton height={'26px'} width={'100%'} />\n          </TextContainer>\n        </Cards>\n      </>\n    );\n}\n  const { data, id } = news\n  const dateObj = new Date(data.date);\n  const year = dateObj.getFullYear();\n  const month = String(dateObj.getMonth() + 1).padStart(2, '0');\n  const day = String(dateObj.getDate()).padStart(2, '0');\n  const hours = String(dateObj.getHours()).padStart(2, '0');\n  const minutes = String(dateObj.getMinutes()).padStart(2, '0');\n  const formattedDate = `${day}.${month}.${year} / ${hours}:${minutes}`;\n\n  return (\n    <>\n      <Cards to={home ? `/about/news/${id}` : `${id}`}>\n        <ImgContainer>\n          <CardImg src={data.image} alt=\"image\" loading=\"lazy\" />\n          <Box position=\"absolute\" top={3} left={3} p={4} bg=\"white\">\n            <Time>{formattedDate}</Time>\n          </Box>\n        </ImgContainer>\n        <TextContainer>\n          <CardText>{data.title}</CardText>\n        </TextContainer>\n      </Cards>\n    </>\n  );\n};\n","import { Footer } from 'components/Footer/Footer';\nimport {\n  TitleContainer,\n  Img,\n  ImgContainer,\n  Container,\n  List,\n} from 'components/common/PagesDetail/PagesDetail.styled';\nimport { NewsRecommendations } from 'components/NewsRecommendations/NewsRecommendations';\nimport { SectionContent } from 'components/Templates/SectionContent/SectionContent';\nimport { SectionTitle } from 'components/Templates/SectionTitle/SectionTitle';\nimport { Title } from 'components/Templates/Title/Title';\nimport { Wrap } from 'components/Templates/Wrap/Wrap';\nimport { Box } from 'components/Box';\nimport { MotionWrap } from 'components/MotionWrap/MotionWrap';\nimport { AnimatePresence } from 'framer-motion';\nimport { HtmlParser } from 'cms/components/HtmlParser';\nimport { LoaderNews } from 'components/LoaderNews';\nimport { useConferenceDetail } from 'client/hooks/conference';\nimport { domToReact } from 'html-react-parser';\nimport { Article } from 'components/Templates/Article/Article';\nimport { ContentImg } from 'components/Templates/ContentImg/ContentImg';\nimport { useParams } from 'react-router-dom';\nimport { ErrorRequest } from 'components/ErrorRequest';\n\nconst options = {\n  replace: el => {\n    switch (el.name) {\n      case 'h1':\n        return (\n          <Title variant=\"h1\" pb={[2, 6]} mb={8} borderBottom={'titles'}>\n            {domToReact(el.children, options)}\n          </Title>\n        );\n      case 'h2':\n        return (\n          <Title variant=\"h2\" pb={[2, 6]} mb={8} borderBottom={'titles'}>\n            {domToReact(el.children, options)}\n          </Title>\n        );\n      case 'h3':\n        return (\n          <Title variant=\"h3\" pb={[2, 6]} mb={8} borderBottom={'titles'}>\n            {domToReact(el.children, options)}\n          </Title>\n        );\n      case 'h4':\n        return (\n          <Title variant=\"h4\" pb={[2, 6]} mb={8} borderBottom={'titles'}>\n            {domToReact(el.children, options)}\n          </Title>\n        );\n      case 'h5':\n        return (\n          <Title variant=\"h5\" pb={[2, 6]} mb={8} borderBottom={'titles'}>\n            {domToReact(el.children, options)}\n          </Title>\n        );\n      case 'p':\n        return <Article>{domToReact(el.children, options)}</Article>;\n      case 'img':\n        return <ContentImg src={el.attribs.src} alt={el.attribs.alt} />;\n      case 'ul':\n        return <List> {domToReact(el.children, options)}</List>;\n      case 'li':\n        return (\n          <li>\n            <Article>{domToReact(el.children, options)}</Article>{' '}\n          </li>\n        );\n      default:\n        break;\n    }\n  },\n};\n\nexport const ConferencesDetail = () => {\n  const { id } = useParams();\n  const { data, isError, isLoading } = useConferenceDetail(id);\n\n  const formattedDate = () => {\n    if (data) {\n      const dateObj = new Date(data.conference.conference.data.date);\n      const year = dateObj.getFullYear();\n      const month = String(dateObj.getMonth() + 1).padStart(2, '0');\n      const day = String(dateObj.getDate()).padStart(2, '0');\n      const hours = String(dateObj.getHours()).padStart(2, '0');\n      const minutes = String(dateObj.getMinutes()).padStart(2, '0');\n      const formattedDate = `${day}.${month}.${year} / ${hours}:${minutes}`;\n\n      return formattedDate;\n    }\n  };\n\n  return (\n    <>\n      <MotionWrap key={34323343443445}>\n        <main>\n          <AnimatePresence mode=\"wait\">\n            {!!data && (\n              <>\n                <MotionWrap key={90304983}>\n                  <SectionTitle pt={[17, 18]} pb={[21, 19]}>\n                    <Wrap>\n                      <ImgContainer>\n                        <Img src={data.conference.conference.data.image} />\n                        <TitleContainer>\n                          <Box px={[6, 9]} py={[20, 8]}>\n                            <Title variant=\"h2\" mb={[5, 2]}>\n                              {data.conference.conference.data.title}\n                            </Title>\n                            <Title variant=\"h5\">{formattedDate()}</Title>\n                          </Box>\n                        </TitleContainer>\n                      </ImgContainer>\n                    </Wrap>\n                  </SectionTitle>\n                  <SectionContent>\n                    <Container>\n                      <Box mb={[16, 19]}>\n                        <HtmlParser\n                          html={data.conference.conference.data.content}\n                          options={options}\n                        />\n                      </Box>\n                    </Container>\n                  </SectionContent>\n                  {data.conference.recommendation[0] && (\n                    <NewsRecommendations\n                      news={data.conference.recommendation}\n                    />\n                  )}\n                </MotionWrap>\n              </>\n            )}\n            {isError && (\n              <MotionWrap key={'error'}>\n                <ErrorRequest />\n              </MotionWrap>\n            )}\n            {isLoading && (\n              <MotionWrap key={34345345}>\n                <LoaderNews />\n              </MotionWrap>\n            )}\n          </AnimatePresence>\n        </main>\n      </MotionWrap>\n\n      <Footer />\n    </>\n  );\n};\n","import type {\n  DefaultedInfiniteQueryObserverOptions,\n  FetchNextPageOptions,\n  FetchPreviousPageOptions,\n  InfiniteData,\n  InfiniteQueryObserverOptions,\n  InfiniteQueryObserverResult,\n  QueryKey,\n} from './types'\nimport type { QueryClient } from './queryClient'\nimport type { NotifyOptions, ObserverFetchOptions } from './queryObserver'\nimport { QueryObserver } from './queryObserver'\nimport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior,\n} from './infiniteQueryBehavior'\nimport type { Query } from './query'\n\ntype InfiniteQueryObserverListener<TData, TError> = (\n  result: InfiniteQueryObserverResult<TData, TError>,\n) => void\n\nexport class InfiniteQueryObserver<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends QueryObserver<\n  TQueryFnData,\n  TError,\n  InfiniteData<TData>,\n  InfiniteData<TQueryData>,\n  TQueryKey\n> {\n  // Type override\n  subscribe!: (\n    listener?: InfiniteQueryObserverListener<TData, TError>,\n  ) => () => void\n\n  // Type override\n  getCurrentResult!: () => InfiniteQueryObserverResult<TData, TError>\n\n  // Type override\n  protected fetch!: (\n    fetchOptions: ObserverFetchOptions,\n  ) => Promise<InfiniteQueryObserverResult<TData, TError>>\n\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(\n    client: QueryClient,\n    options: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ) {\n    super(client, options)\n  }\n\n  protected bindMethods(): void {\n    super.bindMethods()\n    this.fetchNextPage = this.fetchNextPage.bind(this)\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this)\n  }\n\n  setOptions(\n    options?: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n    notifyOptions?: NotifyOptions,\n  ): void {\n    super.setOptions(\n      {\n        ...options,\n        behavior: infiniteQueryBehavior(),\n      },\n      notifyOptions,\n    )\n  }\n\n  getOptimisticResult(\n    options: DefaultedInfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): InfiniteQueryObserverResult<TData, TError> {\n    options.behavior = infiniteQueryBehavior()\n    return super.getOptimisticResult(options) as InfiniteQueryObserverResult<\n      TData,\n      TError\n    >\n  }\n\n  fetchNextPage({ pageParam, ...options }: FetchNextPageOptions = {}): Promise<\n    InfiniteQueryObserverResult<TData, TError>\n  > {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: 'forward', pageParam },\n      },\n    })\n  }\n\n  fetchPreviousPage({\n    pageParam,\n    ...options\n  }: FetchPreviousPageOptions = {}): Promise<\n    InfiniteQueryObserverResult<TData, TError>\n  > {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: 'backward', pageParam },\n      },\n    })\n  }\n\n  protected createResult(\n    query: Query<TQueryFnData, TError, InfiniteData<TQueryData>, TQueryKey>,\n    options: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): InfiniteQueryObserverResult<TData, TError> {\n    const { state } = query\n    const result = super.createResult(query, options)\n\n    const { isFetching, isRefetching } = result\n\n    const isFetchingNextPage =\n      isFetching && state.fetchMeta?.fetchMore?.direction === 'forward'\n\n    const isFetchingPreviousPage =\n      isFetching && state.fetchMeta?.fetchMore?.direction === 'backward'\n\n    return {\n      ...result,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, state.data?.pages),\n      hasPreviousPage: hasPreviousPage(options, state.data?.pages),\n      isFetchingNextPage,\n      isFetchingPreviousPage,\n      isRefetching:\n        isRefetching && !isFetchingNextPage && !isFetchingPreviousPage,\n    }\n  }\n}\n","'use client'\nimport type {\n  QueryObserver,\n  QueryFunction,\n  QueryKey,\n} from '@tanstack/query-core'\nimport { InfiniteQueryObserver, parseQueryArgs } from '@tanstack/query-core'\nimport type { UseInfiniteQueryOptions, UseInfiniteQueryResult } from './types'\nimport { useBaseQuery } from './useBaseQuery'\n\n// HOOK\n\nexport function useInfiniteQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UseInfiniteQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryFnData,\n    TQueryKey\n  >,\n): UseInfiniteQueryResult<TData, TError>\nexport function useInfiniteQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseInfiniteQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryFnData,\n      TQueryKey\n    >,\n    'queryKey'\n  >,\n): UseInfiniteQueryResult<TData, TError>\nexport function useInfiniteQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseInfiniteQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryFnData,\n      TQueryKey\n    >,\n    'queryKey' | 'queryFn'\n  >,\n): UseInfiniteQueryResult<TData, TError>\nexport function useInfiniteQuery<\n  TQueryFnData,\n  TError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  arg1:\n    | TQueryKey\n    | UseInfiniteQueryOptions<\n        TQueryFnData,\n        TError,\n        TData,\n        TQueryFnData,\n        TQueryKey\n      >,\n  arg2?:\n    | QueryFunction<TQueryFnData, TQueryKey>\n    | UseInfiniteQueryOptions<\n        TQueryFnData,\n        TError,\n        TData,\n        TQueryFnData,\n        TQueryKey\n      >,\n  arg3?: UseInfiniteQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryFnData,\n    TQueryKey\n  >,\n): UseInfiniteQueryResult<TData, TError> {\n  const options = parseQueryArgs(arg1, arg2, arg3)\n  return useBaseQuery(\n    options,\n    InfiniteQueryObserver as typeof QueryObserver,\n  ) as UseInfiniteQueryResult<TData, TError>\n}\n"],"names":["useConferenceDetail","id","useQuery","queryKey","queryFn","signal","axios","response","data","refetchOnWindowFocus","refetchOnMount","retry","useInfiniteConference","useInfiniteQuery","pageParam","params","page","getNextPageParam","lastPage","totalPage","nextPage","undefined","LoaderNews","pt","pb","height","width","px","py","variant","Section","styled","Title","p","theme","fonts","titles","fontWeights","bold","fontSizes","mobile","xl","colors","black","desktop","Wrap","Item","NewsRecommendations","title","map","Card","news","Array","fill","item","index","css","color","space","layout","flexbox","grid","background","border","position","shadow","typography","SectionContent","props","SectionTitle","Container","Cards","NavLink","ImgContainer","CardImg","TextContainer","CardText","actions","buttonL","Time","main","tag","home","dateObj","Date","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","formattedDate","to","src","image","alt","loading","Box","top","left","bg","options","replace","el","name","mb","borderBottom","domToReact","children","attribs","ConferencesDetail","useParams","isError","isLoading","mode","conference","html","content","recommendation","bindMethods","fetchNextPage","bind","fetchPreviousPage","setOptions","notifyOptions","behavior","infiniteQueryBehavior","constructor","getOptimisticResult","fetch","meta","fetchMore","direction","createResult","query","state","result","isFetching","isRefetching","isFetchingNextPage","fetchMeta","isFetchingPreviousPage","hasNextPage","_state$data","pages","client","hasPreviousPage","_state$data2","InfiniteQueryObserver"],"sourceRoot":""}