{"version":3,"file":"static/js/8198.3f65136a.chunk.js","mappings":"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","sources":["client/hooks/news.js","components/Templates/TitleDescription/TitleDescription.styled.jsx","components/Templates/TitleDescription/TitleDescription.jsx","components/common/Card/Card.styled.jsx","components/common/Card/Card.jsx","pages/client/News.jsx"],"sourcesContent":["import { useInfiniteQuery, useQuery } from '@tanstack/react-query';\nimport axios from 'axios';\n\nexport function useNews(filter) {\n  return useQuery({\n    queryKey: ['news'],\n    queryFn: async ({ signal }) => {\n      const response = await axios.get(`/api/news`, {\n        signal,\n        params: {\n          ...filter,\n        },\n      });\n      return response.data;\n    },\n    refetchOnWindowFocus: false,\n    refetchOnMount: false,\n    retry: false,\n    // enabled: false, // disable this query from automatically running\n  });\n}\n\nexport function useNewsDetail(id) {\n  return useQuery({\n    queryKey: ['news', id],\n    queryFn: async ({ signal }) => {\n      const response = await axios.get(`/api/news/${id}`, {\n        signal,\n      });\n      return response.data;\n    },\n    refetchOnWindowFocus: false,\n    refetchOnMount: false,\n    retry: false,\n    // enabled: false, // disable this query from automatically running\n  });\n}\n\nexport function useInfiniteNews() {\n  return useInfiniteQuery({\n    queryKey: ['newsInfinite'],\n    queryFn: async ({ signal, pageParam = 1 }) => {\n      const response = await axios.get(`/api/news`, {\n        signal,\n        params: {\n          page: pageParam,\n        },\n      });\n      return response.data;\n    },\n    getNextPageParam: lastPage =>\n      lastPage.totalPage < lastPage.nextPage ? undefined : lastPage.nextPage,\n    refetchOnWindowFocus: false,\n    refetchOnMount: false,\n    retry: false,\n    // enabled: false, // disable this query from automatically running\n  });\n}\n","import styled, { css } from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow,\n  typography,\n} from 'styled-system';\n\nexport const Description = styled('p')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow,\n  typography,\n  css`\n    font-family: ${p => p.theme.fonts.main};\n    font-weight: ${p => p.theme.fontWeights.regular};\n    font-size: ${p => p.theme.fontSizes.main.body};\n    line-height: 1.5;\n    color: ${p => p.theme.colors.black};\n    @media screen and (min-width: 980px) {\n      line-height: 1.6;\n    }\n  `\n);\n","import { Description } from './TitleDescription.styled';\n\nexport const TitleDescription = (props) => {\n  return (\n    <>\n      <Description {...props} />\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Cards = styled(NavLink)`\n  /* text-decoration-line:none; */\n  text-decoration: none;\n  display: block;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  /* min-width: 358px; */\n  /* max-width: 400px; */\n  /* max-height: 340px; */\n  /* width: 100%; */\n  padding: 4px 4px 16px;\n  height: 100%;\n  border-radius: 4px;\n  align-items: center;\n  background: #ffffff;\n  box-shadow: 0px 4px 128px rgba(188, 196, 211, 0.5);\n  /* transition-property: text-decoration;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); */\n  :hover,\n  :focus {\n    /* box-shadow: 0px 4px 128px rgb(112 123 144 / 56%); */\n    text-decoration-line: underline;\n    text-decoration-color: ${p => p.theme.colors.black};\n  }\n  @media screen and (min-width: 980px) {\n    padding: 4px 4px 24px;\n    gap: 20px;\n  }\n`;\n\nexport const ImgContainer = styled.div`\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n  border: 2px solid #161b1f;\n  border-radius: 1px;\n  height: 240px;\n  @media screen and (max-width: 599px) {\n    height: 156px;\n  }\n`;\nexport const CardImg = styled.img`\n  /* margin-top: 4px ; */\n  /* max-width: 100%; */\n  width: 100%;\n  height: 240px;\n  object-fit: cover;\n  object-position: center;\n\n  @media screen and (max-width: 599px) {\n    height: 156px;\n  }\n`;\n\nexport const TextContainer = styled.div`\n  width: 100%;\n  /* height: 48px; */\n  /* margin-bottom: 16px; */\n  flex-grow: 1;\n  /* @media screen and (min-width: 980px) { */\n  /* margin-bottom: 24px; */\n  /* height: 52px; */\n\n  /* } */\n`;\n\nexport const CardText = styled.p`\n  padding: 0 12px 0 12px;\n  /* margin-bottom: 16px; */\n  font-family: ${p => p.theme.fonts.actions};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.actions.buttonL};\n  line-height: 1.33;\n  letter-spacing: -0.06em;\n  color: ${p => p.theme.colors.black};\n  @media screen and (min-width: 980px) {\n    line-height: 1.3;\n    padding: 0 20px 0 20px;\n    /* margin-bottom: 24px; */\n  }\n\n  height: 100%;\n`;\n\nexport const Time = styled.p`\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.main.tag};\n  text-transform: uppercase;\n  color: ${p => p.theme.colors.black};\n`;\n","import { Box } from 'components/Box';\nimport {\n  Cards,\n  CardImg,\n  CardText,\n  ImgContainer,\n  TextContainer,\n  Time,\n} from './Card.styled';\nimport Skeleton from 'react-loading-skeleton';\nexport const Card = ({ news, home}) => {\n  if (!news) {\n    return (\n      <>\n        <Cards>\n          <ImgContainer>\n            <Skeleton height={'100%'} width={'100%'} />\n          </ImgContainer>\n          <TextContainer>\n            <Skeleton height={'26px'} width={'100%'} />\n          </TextContainer>\n        </Cards>\n      </>\n    );\n}\n  const { data, id } = news\n  const dateObj = new Date(data.date);\n  const year = dateObj.getFullYear();\n  const month = String(dateObj.getMonth() + 1).padStart(2, '0');\n  const day = String(dateObj.getDate()).padStart(2, '0');\n  const hours = String(dateObj.getHours()).padStart(2, '0');\n  const minutes = String(dateObj.getMinutes()).padStart(2, '0');\n  const formattedDate = `${day}.${month}.${year} / ${hours}:${minutes}`;\n\n  return (\n    <>\n      <Cards to={home ? `/about/news/${id}` : `${id}`}>\n        <ImgContainer>\n          <CardImg src={data.image} alt=\"image\" loading=\"lazy\" />\n          <Box position=\"absolute\" top={3} left={3} p={4} bg=\"white\">\n            <Time>{formattedDate}</Time>\n          </Box>\n        </ImgContainer>\n        <TextContainer>\n          <CardText>{data.title}</CardText>\n        </TextContainer>\n      </Cards>\n    </>\n  );\n};\n","import { Footer } from 'components/Footer/Footer';\nimport { Card } from 'components/common/Card/Card';\nimport { SectionContent } from 'components/Templates/SectionContent/SectionContent';\nimport { SectionTitle } from 'components/Templates/SectionTitle/SectionTitle';\nimport { Title } from 'components/Templates/Title/Title';\nimport { Wrap } from 'components/Templates/Wrap/Wrap';\nimport { TitleDescription } from 'components/Templates/TitleDescription/TitleDescription';\nimport { ListWrap } from 'components/Templates/ListWrap/ListWrap';\nimport { Box } from 'components/Box';\nimport { LoadMore } from 'components/common/LoadMore/LoadMore';\nimport React from 'react';\nimport { useInfiniteNews } from 'client/hooks/news';\nimport { MotionWrap } from 'components/MotionWrap/MotionWrap';\nimport { AnimatePresence } from 'framer-motion';\nimport { ErrorRequest } from 'components/ErrorRequest';\n\nexport const News = () => {\n  const { data, isError, isLoading, hasNextPage, fetchNextPage } =\n    useInfiniteNews();\n\n  return (\n    <>\n      <MotionWrap key={3434343345}>\n        <main>\n          <SectionTitle pb={[16, 12]}>\n            <Wrap>\n              <Title variant=\"h1\" textAlign={[null, 'center']} mb={[3, 6]}>\n                Новини_кафедри\n              </Title>\n              <TitleDescription textAlign={[null, 'center']}>\n                Стрічка з останніми публікаціями про культурні заходи та\n                здобутки кафедри АСУ\n              </TitleDescription>\n            </Wrap>\n          </SectionTitle>\n          <SectionContent>\n            <Wrap>\n              <AnimatePresence mode=\"wait\">\n                {data && (\n                  <ListWrap key={98867576509}>\n                    {data.pages.map((data, index) => (\n                      <React.Fragment key={index}>\n                        {data.news.map(news => (\n                          <Box\n                            as=\"li\"\n                            minWidth=\"250px\"\n                            maxWidth={['100%', '400px']}\n                            key={news.id}\n                          >\n                            <Card news={news} />\n                          </Box>\n                        ))}\n                      </React.Fragment>\n                    ))}\n                  </ListWrap>\n                )}\n                {isLoading && (\n                  <ListWrap key={898498348030938043948}>\n                    {Array(9)\n                      .fill()\n                      .map((item, index) => {\n                        return (\n                          <Box\n                            as=\"li\"\n                            minWidth=\"250px\"\n                            maxWidth={['100%', '400px']}\n                            key={index}\n                          >\n                            <Card />\n                          </Box>\n                        );\n                      })}\n                  </ListWrap>\n                )}\n                {isError && (\n                  <MotionWrap key={'error'}>\n                    <ErrorRequest />\n                  </MotionWrap>\n                )}\n              {data && (\n                  <LoadMore\n                    type='button'\n                  mt={['16px', '24px']}\n                  onClick={fetchNextPage}\n                  disabled={!hasNextPage}\n                >\n                  Завантажити_більше\n                </LoadMore>\n              )}\n              </AnimatePresence>\n            </Wrap>\n          </SectionContent>\n        </main>\n      </MotionWrap>\n      <Footer />\n    </>\n  );\n};\n"],"names":["useNews","filter","useQuery","queryKey","queryFn","signal","axios","params","response","data","refetchOnWindowFocus","refetchOnMount","retry","useNewsDetail","id","useInfiniteNews","useInfiniteQuery","pageParam","page","getNextPageParam","lastPage","totalPage","nextPage","undefined","Description","styled","color","space","layout","flexbox","grid","background","border","position","shadow","typography","css","p","theme","fonts","main","fontWeights","regular","fontSizes","body","colors","black","TitleDescription","props","Cards","NavLink","ImgContainer","CardImg","TextContainer","CardText","actions","bold","buttonL","Time","tag","Card","news","home","height","width","dateObj","Date","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","formattedDate","to","src","image","alt","loading","Box","top","left","bg","title","News","isError","isLoading","hasNextPage","fetchNextPage","pb","variant","textAlign","mb","mode","pages","map","index","as","minWidth","maxWidth","Array","fill","item","type","mt","onClick","disabled"],"sourceRoot":""}