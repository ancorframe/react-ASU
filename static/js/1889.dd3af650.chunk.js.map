{"version":3,"file":"static/js/1889.dd3af650.chunk.js","mappings":"0NAcaA,EAAOC,EAAAA,GAAAA,EAAH,sXACA,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,IAAlB,IACD,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,YAAYC,OAAxB,IACH,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,UAAUH,KAAKI,IAA3B,IAEL,SAAAP,GAAC,OAAIA,EAAEC,MAAMO,OAAOC,KAAnB,GAYRC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,I,WCtCSC,EAAU,SAAAC,GACrB,OAAO,SAACvB,GAAD,UAAUuB,GAClB,C,oHCSYC,EAAavB,EAAAA,GAAAA,MAAH,2tBAWJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,IAAlB,IACD,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,YAAYC,OAAxB,IACH,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,UAAUiB,OAAOC,EAA7B,IAEL,SAAAxB,GAAC,OAAIA,EAAEC,MAAMO,OAAOiB,IAAnB,IAEK,SAAAzB,GAAC,OAAIA,EAAEC,MAAMK,UAAUoB,QAAQC,CAA9B,IAMA,SAAA3B,GAAC,OAAIA,EAAEC,MAAMO,OAAOC,KAAnB,IAIN,SAAAT,GAAC,OAAIA,EAAEC,MAAMO,OAAOC,KAAnB,GAGZC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,I,uDC/CSS,EAAQ,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAASR,GAAY,YACvC,GAGIS,EAAAA,EAAAA,MAFFC,EADF,EACEA,QACaC,EAFf,EAEEC,UAAaD,OAEnB,OACE,iCACE,SAAC,KAAD,CACEE,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OAAe,SAACb,GAAD,kBAAgBa,GAAWd,GAA1C,EACRQ,KAAMA,EACNE,QAASA,EACTK,aAAa,MAEf,SAAC,IAAD,CACEJ,OAAQA,EACRH,KAAMA,EACNK,OAAQ,gBAAGG,EAAH,EAAGA,QAAH,OAAiB,SAACjB,EAAA,EAAD,CAASV,MAAM,MAAf,SAAsB2B,GAAvC,MAIf,C,2ICvBYC,EAAiBC,EAAAA,GACpB,CACNC,MAAOD,EAAAA,KAAaC,QAAQC,WAC5BC,SAAUH,EAAAA,KAAaI,IAAI,GAAGF,WAC9BG,SAAUL,EAAAA,KAAaI,IAAI,GAAGF,aAE/BA,W,WCFGI,EAAgB,CACpBL,MAAO,GACPE,SAAU,GACVE,SAAU,IAECE,EAAW,WACtB,IAAMC,GAAUC,EAAAA,EAAAA,IAAQ,CACtBH,cAAAA,EACAI,UAAUC,EAAAA,EAAAA,GAAYZ,KAElBa,GAAWC,EAAAA,EAAAA,MAOjB,OACE,iCACE,0CACA,SAAC,MAAD,kBAAkBL,GAAlB,cACE,kBAAMM,SAAUN,EAAQO,cATb,SAAAC,GACfC,QAAQC,IAAIF,GACZJ,EAASO,OAAOH,EACjB,IAMK,WACE,gCACE,yCACA,SAAC3B,EAAA+B,EAAD,CAAO9B,KAAK,iBAEd,gCACE,sCACA,SAACD,EAAA+B,EAAD,CAAO9B,KAAK,cAEd,gCACE,yCACA,SAACD,EAAA+B,EAAD,CAAO9B,KAAK,WAAW+B,KAAK,iBAE9B,mBAAQA,KAAK,SAAb,4BAKT,C","sources":["components/Templates/Article/Article.styled.jsx","components/Templates/Article/Article.jsx","components/Templates/Input/Input.styled.jsx","components/Templates/Input/Input.jsx","cms/validationSchemas/registerSchemas.js","pages/admin/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow,\n  typography,\n} from 'styled-system';\n\nexport const Text = styled.p`\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights.regular};\n  font-size: ${p => p.theme.fontSizes.main.body};\n  line-height: 1.5;\n  color: ${p => p.theme.colors.black};\n  text-align: justify;\n\n  @media screen and (min-width: 980px) {\n    line-height: 1.6;\n  } \n&:empty{\n &::after {\n  white-space: break-spaces;\n  content: \" \"\n}}\n  \n  ${color};\n  ${space};\n  ${layout};\n  ${flexbox};\n  ${grid};\n  ${background};\n  ${border};\n  ${position};\n  ${shadow};\n  ${typography}\n`;\n","import { Text } from './Article.styled';\n\nexport const Article = props => {\n  return <Text {...props} />;\n};\n","import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow,\n  typography,\n} from 'styled-system';\nexport const InputField = styled.input`\n  height: 56px;\n  background: #ffffff;\n  width: 100%;\n  border: 1px solid #bcc4d3;\n  border-radius: 1px;\n  padding: 12px 52px 12px 16px;\n  transition-property: (border-color, color);\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  ::placeholder {\n    font-family: ${p => p.theme.fonts.main};\n    font-weight: ${p => p.theme.fontWeights.regular};\n    font-size: ${p => p.theme.fontSizes.mobile.sm};\n    line-height: 1.5;\n    color: ${p => p.theme.colors.grey};\n    @media screen and (min-width: 980px) {\n      font-size: ${p => p.theme.fontSizes.desktop.m};\n      line-height: 1.6;\n    }\n  }\n  :hover,\n  :focus {\n    border-color: ${p => p.theme.colors.black};\n  }\n  :focus {\n    ::placeholder {\n      color: ${p => p.theme.colors.black};\n    }\n  }\n  ${color};\n  ${space};\n  ${layout};\n  ${flexbox};\n  ${grid};\n  ${background};\n  ${border};\n  ${position};\n  ${shadow};\n  ${typography}\n`;\n","import { InputField } from './Input.styled';\nimport { Controller, useFormContext } from 'react-hook-form';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { Article } from '../Article/Article';\n\nexport const Input = ({ name, ...props }) => {\n      const {\n        control,\n        formState: { errors },\n      } = useFormContext();\n  return (\n    <>\n      <Controller\n        render={({ field }) => <InputField {...field} {...props} />}\n        name={name}\n        control={control}\n        defaultValue=\"\"\n      />\n      <ErrorMessage\n        errors={errors}\n        name={name}\n        render={({ message }) => <Article color='red'>{message}</Article>}\n      />\n    </>\n  );\n};\n","import * as yup from 'yup';\n\nexport const registerSchema = yup\n  .object({\n    email: yup.string().email().required(),\n    password: yup.string().min(8).required(),\n    fullName: yup.string().min(5).required(),\n  })\n  .required();\n","import { Input } from 'components/Templates/Input/Input';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { useSignUp } from 'cms/hooks/auth';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { registerSchema } from 'cms/validationSchemas/registerSchemas';\n\nconst defaultValues = {\n  email: '',\n  password: '',\n  fullName: '',\n};\nexport const Register = () => {\n  const methods = useForm({\n    defaultValues,\n    resolver: yupResolver(registerSchema),\n  });\n  const mutation = useSignUp();\n\n  const onSubmit = data => {\n    console.log(data);\n    mutation.mutate(data);\n  };\n\n  return (\n    <>\n      <p>register page</p>\n      <FormProvider {...methods}>\n        <form onSubmit={methods.handleSubmit(onSubmit)}>\n          <section>\n            <label>fullName</label>\n            <Input name=\"fullName\" />\n          </section>\n          <section>\n            <label>email</label>\n            <Input name=\"email\" />\n          </section>\n          <section>\n            <label>password</label>\n            <Input name=\"password\" type=\"password\" />\n          </section>\n          <button type=\"submit\">submit</button>\n        </form>\n      </FormProvider>\n    </>\n  );\n};\n"],"names":["Text","styled","p","theme","fonts","main","fontWeights","regular","fontSizes","body","colors","black","color","space","layout","flexbox","grid","background","border","position","shadow","typography","Article","props","InputField","mobile","sm","grey","desktop","m","Input","name","useFormContext","control","errors","formState","render","field","defaultValue","message","registerSchema","yup","email","required","password","min","fullName","defaultValues","Register","methods","useForm","resolver","yupResolver","mutation","useSignUp","onSubmit","handleSubmit","data","console","log","mutate","I","type"],"sourceRoot":""}