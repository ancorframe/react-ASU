{"version":3,"file":"static/js/525.d3dfd8fd.chunk.js","mappings":"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","sources":["components/SingUp/SingUpForm.jsx","components/SingUp/SingUp.styled.jsx","components/SingUp/SingUp.jsx","Pages/SingUpPage.jsx"],"sourcesContent":["import Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport * as Yup from 'yup';\nimport { Box } from 'components/Box';\nimport { useFormik } from 'formik';\nimport { useSignupMutation } from 'API/authApi';\nimport { useDispatch } from 'react-redux';\nimport { updateToken} from '../../Redux/authSlice';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string('Enter your name').required('name is required'),\n  email: Yup.string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: Yup.string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nexport const SingUpForm = () => {\n  const [singup] = useSignupMutation();\n  const dispatch = useDispatch();\n  \n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      singup(values)\n        .unwrap()\n        .then(response => {\n          dispatch(updateToken(response.token));\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    },\n  });\n\n  return (\n    <>\n      <Box as=\"form\" onSubmit={formik.handleSubmit} sx={{ mt: 1 }}>\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          required\n          id=\"name\"\n          name=\"name\"\n          label=\"name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          required\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          required\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2 }}\n        >\n          Register\n        </Button>\n      </Box>\n    </>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Link = styled(NavLink)`\n  margin: 0;\n  /* font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif; */\n  font-weight: 400;\n  font-size: 0.875rem;\n  line-height: 1.43;\n  letter-spacing: 0.01071em;\n  color: #1976d2;\n  /* -webkit-text-decoration: underline; */\n  text-decoration: underline;\n  text-decoration-color: rgba(25, 118, 210, 0.4);\n  :hover,\n  :focus {\n    text-decoration-color: inherit;\n  }\n`;\n","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { SingUpForm } from 'components/SingUp/SingUpForm';\nimport { Link } from './SingUp.styled';\n\nexport const SingUp = () => {\n  return (\n    <>\n      <Container maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <SingUpForm />\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to=\"/login\">Already have an account? Sign in</Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Container>\n    </>\n  );\n};\n","import { Box } from 'components/Box';\nimport { SingUp } from 'components/SingUp/SingUp';\n\nexport const SingUpPage = () => {\n  return (\n    <Box\n      as=\"main\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      gridGap={3}\n      pt={5}\n    >\n      <SingUp />\n    </Box>\n  );\n};\n"],"names":["validationSchema","Yup","shape","name","required","email","password","min","SingUpForm","useSignupMutation","singup","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","unwrap","then","response","updateToken","token","catch","error","console","log","Box","as","handleSubmit","sx","mt","TextField","margin","fullWidth","id","label","value","onChange","handleChange","touched","Boolean","errors","helperText","type","Button","variant","mb","Link","styled","NavLink","SingUp","Container","maxWidth","CssBaseline","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","component","Grid","container","justifyContent","item","to","SingUpPage","gridGap","pt"],"sourceRoot":""}