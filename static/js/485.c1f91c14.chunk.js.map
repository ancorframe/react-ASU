{"version":3,"file":"static/js/485.c1f91c14.chunk.js","mappings":"6WASMA,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,GAAW,oBACfE,MAAM,uBACNC,SAAS,qBACZC,SAAUJ,EAAAA,GAAW,uBAClBK,IAAI,EAAG,qDACPF,SAAS,0BAGDG,EAAY,WACvB,OAAgBC,EAAAA,EAAAA,MAATC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MAOXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cANoB,CACpBX,MAAO,GACPE,SAAU,IAKVL,iBAAkBA,EAClBe,SAAU,SAAAC,GACRP,EAAMO,GACHC,SACAC,MAAK,SAAAC,GACJT,GAASU,EAAAA,EAAAA,IAAYD,EAASE,QAC9BX,GAASY,EAAAA,EAAAA,IAAWH,EAASI,OAC7Bb,GAASc,EAAAA,EAAAA,KAAa,GACvB,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,GACJ,IAGH,OACE,+BACE,UAACG,EAAA,EAAD,CAAKC,GAAG,OAAOf,SAAUH,EAAOmB,aAAcC,GAAI,CAAEC,GAAI,GAAxD,WACE,SAACC,EAAA,EAAD,CACEC,OAAO,SACPC,WAAS,EACThC,UAAQ,EACRiC,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,MAAO5B,EAAOI,OAAOb,MACrBsC,SAAU7B,EAAO8B,aACjBhB,MAAOd,EAAO+B,QAAQxC,OAASyC,QAAQhC,EAAOiC,OAAO1C,OACrD2C,WAAYlC,EAAO+B,QAAQxC,OAASS,EAAOiC,OAAO1C,SAEpD,SAAC+B,EAAA,EAAD,CACEC,OAAO,SACPC,WAAS,EACThC,UAAQ,EACRiC,GAAG,WACHC,KAAK,WACLC,MAAM,WACNQ,KAAK,WACLP,MAAO5B,EAAOI,OAAOX,SACrBoC,SAAU7B,EAAO8B,aACjBhB,MAAOd,EAAO+B,QAAQtC,UAAYuC,QAAQhC,EAAOiC,OAAOxC,UACxDyC,WAAYlC,EAAO+B,QAAQtC,UAAYO,EAAOiC,OAAOxC,YAEvD,SAAC2C,EAAA,EAAD,CACED,KAAK,SACLX,WAAS,EACTa,QAAQ,YACRjB,GAAI,CAAEC,GAAI,EAAGiB,GAAI,GAJnB,uBAWP,E,mBC/EYC,GAAOC,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAH,4ZCOJE,EAAQ,WACnB,OACE,+BACE,UAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,WACE,SAACC,EAAA,GAAD,KACA,UAAC,IAAD,CACEzB,GAAI,CACF0B,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAACC,EAAA,EAAD,CAAQ9B,GAAI,CAAE+B,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAYC,UAAU,KAAKlB,QAAQ,KAAnC,sBAGA,SAAC1C,EAAD,KACA,SAAC6D,EAAA,GAAD,CAAMC,WAAS,EAACC,eAAe,WAA/B,UACE,SAACF,EAAA,GAAD,CAAMG,MAAI,EAAV,UACE,SAACpB,EAAD,CAAMqB,GAAG,YAAT,uDAOb,ECrCYC,EAAY,WACvB,OACE,SAAC5C,EAAA,EAAD,CACEC,GAAG,OACH6B,QAAQ,OACRC,cAAc,SACdC,WAAW,SACXa,QAAS,EACTC,GAAI,EANN,UAQE,SAACrB,EAAD,KAGL,C","sources":["components/Login/LoginForm.jsx","components/Login/Login.styled.jsx","components/Login/Login.jsx","Pages/LoginPage.jsx"],"sourcesContent":["import Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { Box } from 'components/Box';\nimport { useLoginMutation } from 'API/authApi';\nimport { useDispatch } from 'react-redux';\nimport { updateToken, updateUser, updateStatus } from '../../Redux/authSlice';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: Yup.string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nexport const LoginForm = () => {\n  const [login] = useLoginMutation();\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      login(values)\n        .unwrap()\n        .then(response => {\n          dispatch(updateToken(response.token));\n          dispatch(updateUser(response.user));\n          dispatch(updateStatus(true));\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    },\n  });\n\n  return (\n    <>\n      <Box as=\"form\" onSubmit={formik.handleSubmit} sx={{ mt: 1 }}>\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          required\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          required\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2 }}\n        >\n          Login\n        </Button>\n      </Box>\n    </>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\n\nexport const Link = styled(NavLink)`\n  margin: 0;\n  /* font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif; */\n  font-weight: 400;\n  font-size: 0.875rem;\n  line-height: 1.43;\n  letter-spacing: 0.01071em;\n  color: #1976d2;\n  /* -webkit-text-decoration: underline; */\n  text-decoration: underline;\n  text-decoration-color: rgba(25, 118, 210, 0.4);\n  :hover,\n  :focus {\n    text-decoration-color: inherit;\n  }\n`;","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { LoginForm } from './LoginForm';\nimport { Link } from './Login.styled';\n\nexport const Login = () => {\n  return (\n    <>\n      <Container maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <LoginForm />\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to=\"/register\">Don't have an account? Sign Up</Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Container>\n    </>\n  );\n};\n","import { Box } from 'components/Box';\nimport { Login } from 'components/Login/Login';\n\nexport const LoginPage = () => {\n  return (\n    <Box\n      as=\"main\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      gridGap={3}\n      pt={5}\n    >\n      <Login />\n    </Box>\n  );\n};\n"],"names":["validationSchema","Yup","shape","email","required","password","min","LoginForm","useLoginMutation","login","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","unwrap","then","response","updateToken","token","updateUser","user","updateStatus","catch","error","console","log","Box","as","handleSubmit","sx","mt","TextField","margin","fullWidth","id","name","label","value","onChange","handleChange","touched","Boolean","errors","helperText","type","Button","variant","mb","Link","styled","NavLink","Login","Container","maxWidth","CssBaseline","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","component","Grid","container","justifyContent","item","to","LoginPage","gridGap","pt"],"sourceRoot":""}